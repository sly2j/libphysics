#ifndef PHYSICS_UNIT_PREFIX_LOADED
#define PHYSICS_UNIT_PREFIX_LOADED

#include <physics/unit/prototype.hh>
#include <physics/unit/detail.hh>

// define quantities for all SI-prefix versions for a quantity with name
// BASE_NAME, with as reference unit (the one without SI Prefix) BASE_UNIT
// this macro can be called from within an arbirtrary namespace
// (the prefixed units will be defined in that namespace)
#define PHYSICS_DEFINE_PREFIX_QUANTITIES(BASE_NAME, BASE_UNIT)                 \
  PHYSICS_DEFINE_SCALED_QUANTITY(y##BASE_NAME, -24, BASE_UNIT)                 \
  PHYSICS_DEFINE_SCALED_QUANTITY(z##BASE_NAME, -21, BASE_UNIT)                 \
  PHYSICS_DEFINE_SCALED_QUANTITY(a##BASE_NAME, -18, BASE_UNIT)                 \
  PHYSICS_DEFINE_SCALED_QUANTITY(f##BASE_NAME, -15, BASE_UNIT)                 \
  PHYSICS_DEFINE_SCALED_QUANTITY(p##BASE_NAME, -12, BASE_UNIT)                 \
  PHYSICS_DEFINE_SCALED_QUANTITY(n##BASE_NAME, -9, BASE_UNIT)                  \
  PHYSICS_DEFINE_SCALED_QUANTITY(u##BASE_NAME, -6, BASE_UNIT)                  \
  PHYSICS_DEFINE_SCALED_QUANTITY(m##BASE_NAME, -3, BASE_UNIT)                  \
  PHYSICS_DEFINE_SCALED_QUANTITY(c##BASE_NAME, -2, BASE_UNIT)                  \
  PHYSICS_DEFINE_SCALED_QUANTITY(d##BASE_NAME, -1, BASE_UNIT)                  \
  PHYSICS_DEFINE_SCALED_QUANTITY(BASE_NAME, 0, BASE_UNIT)                      \
  PHYSICS_DEFINE_SCALED_QUANTITY(da##BASE_NAME, 1, BASE_UNIT)                  \
  PHYSICS_DEFINE_SCALED_QUANTITY(h##BASE_NAME, 2, BASE_UNIT)                   \
  PHYSICS_DEFINE_SCALED_QUANTITY(k##BASE_NAME, 3, BASE_UNIT)                   \
  PHYSICS_DEFINE_SCALED_QUANTITY(M##BASE_NAME, 6, BASE_UNIT)                   \
  PHYSICS_DEFINE_SCALED_QUANTITY(G##BASE_NAME, 9, BASE_UNIT)                   \
  PHYSICS_DEFINE_SCALED_QUANTITY(T##BASE_NAME, 12, BASE_UNIT)                  \
  PHYSICS_DEFINE_SCALED_QUANTITY(P##BASE_NAME, 15, BASE_UNIT)                  \
  PHYSICS_DEFINE_SCALED_QUANTITY(E##BASE_NAME, 18, BASE_UNIT)                  \
  PHYSICS_DEFINE_SCALED_QUANTITY(Z##BASE_NAME, 21, BASE_UNIT)                  \
  PHYSICS_DEFINE_SCALED_QUANTITY(Y##BASE_NAME, 24, BASE_UNIT)

// define template specializations for unit_string() to get pretty printing
// names for our units
// This macro has to be called from the ***GLOBAL SCOPE***, and after the
// corresponding PHYSICS_DEFINE_PREFIX_UNITS() has been called
// NAMESPACE is the namespace that PREFIX_DEFINE_PREFIX_UNITS() was called from
#define PHYSICS_DEFINE_PREFIX_QUANTITY_NAMES(NAMESPACE, BASE_NAME)             \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::y##BASE_NAME, "y" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::z##BASE_NAME, "z" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::a##BASE_NAME, "a" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::f##BASE_NAME, "f" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::p##BASE_NAME, "p" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::n##BASE_NAME, "n" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::u##BASE_NAME, "u" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::m##BASE_NAME, "m" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::c##BASE_NAME, "c" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::d##BASE_NAME, "d" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::BASE_NAME, #BASE_NAME)               \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::da##BASE_NAME, "da" #BASE_NAME)      \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::h##BASE_NAME, "h" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::k##BASE_NAME, "k" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::M##BASE_NAME, "M" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::G##BASE_NAME, "G" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::T##BASE_NAME, "T" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::P##BASE_NAME, "P" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::E##BASE_NAME, "E" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::Z##BASE_NAME, "Z" #BASE_NAME)        \
  PHYSICS_DEFINE_QUANTITY_NAME(NAMESPACE::Y##BASE_NAME, "Y" #BASE_NAME)

#endif
